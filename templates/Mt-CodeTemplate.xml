<templateSet group="Mt-CodeTemplate">
  <template name="deleg" value="// todo 1 判空逻辑改一下&#10;if (java.util.Objects.isNull(thriftRequest)) {&#10;    return new $methodReturnType$();&#10;}&#10;String thriftMethod = &quot;$className$.$methodName$&quot;;&#10;&#10;// todo 2 打点的工程赋一下值&#10;CatMetricEnum catMetricEnum;&#10;&#10;try {&#10;    // todo 3 调用实际的函数，这里写的时候要注意上面传的参数跟下面的完全一致，要么就是自己抄出来生成赋值&#10;    $methodReturnType$ thriftResponse = trainTripService.queryTrainTripWithoutLeftTicketNum($ARGUMENTS$);&#10;    if (java.util.Objects.isNull(thriftResponse)) {&#10;        CatReportUtil.monitorThriftServiceNull(catMetricEnum, thriftMethod);&#10;        logger.error(&quot;AgentBaseDataDelegateService {} return null, $PLACE_HOLDERS$&quot;, thriftMethod, $ARGUMENTS$);&#10;        return new $methodReturnType$();&#10;    }&#10;    if (0 != thriftResponse.getCode() || Objects.isNull(thriftResponse.getData())) {&#10;        logger.error(&quot;$className$.$METHOD_NAME$ return error, errorCode: {}, errorMsg: {}, req $PLACE_HOLDERS$&quot;, &#10;                thriftResponse.getCode(), thriftResponse.getMsg(), $ARGUMENTS$);&#10;        CatReportUtil.monitorThriftServiceFail(catMetricEnum, thriftMethod, thriftResponse.getCode() + &quot;:&quot; + thriftResponse.getMsg());&#10;        return new $methodReturnType$();&#10;    }&#10;&#10;    CatReportUtil.monitorMetricSuccess(catMetricEnum, thriftMethod);&#10;    logger.info(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$, response:{}&quot;, $ARGUMENTS$, thriftResponse);&#10;    return thriftResponse;&#10;} catch (org.apache.thrift.TException e) {&#10;    CatReportUtil.monitorThriftServiceTException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ TException, req: {}&quot;, $ARGUMENTS$, e);&#10;} catch (Exception e) {&#10;    CatReportUtil.monitorThriftServiceException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ system error, req: {}&quot;, $ARGUMENTS$, e);&#10;}&#10;return new $methodReturnType$();" description="调用服务的delegate服务" toReformat="false" toShortenFQNames="true">
    <variable name="methodReturnType" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="thrift" value="$methodReturnType$ thriftResponse = new $methodReturnType$();&#10;try {&#10;&#10;    String thriftMethod = &quot;$methodName$&quot;;&#10;&#10;    // todo 2 打点的工程赋一下值&#10;    CatMetricEnum catMetricEnum;&#10;    grabWelfareChannelService.$METHOD_NAME$(request.getQOrderId(), ActivityGrabOrderStatusEnum.SUCCESS.getCode());&#10;&#10;    thriftResponse.setCode(Integer.valueOf(ErrorCodeEnum.SUCCESS.getCode()));&#10;    thriftResponse.setMessage(ErrorCodeEnum.SUCCESS.getMessage());&#10;    CatReportUtil.concat(report,$methodName$)(catMetricEnum, &quot;$methodName$&quot;, &quot;success&quot;);&#10;    logger.info(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$, thriftResponse:{}&quot;, $ARGUMENTS$, thriftResponse);&#10;} catch (AppException e) {&#10;    logger.error(&quot;$className$.$METHOD_NAME$ appException, errorCode: {}, errorMsg: {}, $PLACE_HOLDERS$&quot;,               e.getCode(), e.getMsg(), $ARGUMENTS$);&#10;    CatReportUtil.concat(report,$methodName$)(catMetricEnum, &quot;$methodName$&quot;,e.getErrorMessage());&#10;    thriftResponse.setCode(Integer.valueOf(e.getErrorCode()));&#10;    thriftResponse.setMessage(e.getMessage());&#10;&#10;} catch (Exception e) {&#10;    logger.error(&quot;$className$.$METHOD_NAME$ system error, $PLACE_HOLDERS$&quot;, $ARGUMENTS$, e);&#10;    CatReportUtil.monitorThriftServiceException(catMetricEnum, &quot;$methodName$&quot;, &quot;fail&quot;);&#10;&#10;    thriftResponse.setCode(Integer.valueOf(ErrorCodeEnum.FAIL.getCode()));&#10;    thriftResponse.setMessage(ErrorCodeEnum.FAIL.getMessage());&#10;}&#10;return thriftResponse;" description="提供服务的thrift方法" toReformat="false" toShortenFQNames="true">
    <variable name="methodReturnType" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="enumGene" value="    //    SELECT_SEAT_NOW(1, &quot;已选择坐席&quot;),&#10;    ;&#10; &#10;    private Integer code;&#10;    private String message;&#10;&#10;    private static final java.util.Map&lt;Integer, $className$&gt; CODE_MAP;&#10;&#10;    static {&#10;        CODE_MAP = com.google.common.collect.Maps.newHashMap();&#10;        for ($className$ item : $className$.values()) {&#10;            CODE_MAP.put(item.getCode(), item);&#10;        }&#10;    }&#10;&#10;    $className$(Integer code, String message) {&#10;        this.code = code;&#10;        this.message = message;&#10;    }&#10;&#10;    public String getmessage() {&#10;        return message;&#10;    }&#10;&#10;    public Integer getCode() {&#10;        return code;&#10;    }&#10;&#10;    public static final $className$ codeOf(Integer code) {&#10;        if (code == null) {&#10;            return null;&#10;        }&#10;        return CODE_MAP.get(code);&#10;    }" description="enum生成" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tbmsSwitch1" value="import com.facebook.swift.codec.ThriftField;&#10;import com.facebook.swift.codec.ThriftStruct;&#10;import com.meituan.train.tbms.model.TBizCodeInfo;&#10;/**&#10; * @author yangzhe&#10; * @date $time$&#10; * (1) 先生成一个类，然后生成当前这些代码&#10; * (2) 把缺的data那个类补上&#10; * (3) 改 OctoConfigThriftService 这个类，里面加一个方法&#10; * (4) 改pom版本，然后再 tbms-web 那里改下pom版本&#10; * (5) 在tbms-web 里面开始改 OctoConfigThriftServiceImpl 这个类，直接开始写实现了&#10; */&#10;@ThriftStruct&#10;public class $className$ {&#10;&#10;&#9;private TBizCodeInfo bizCode;&#10;&#10;&#9;private $SonClass$ config;&#10;&#10;&#9;@ThriftField(1)&#10;&#9;public TBizCodeInfo getBizCode() {&#10;&#9;&#9;return bizCode;&#10;&#9;}&#10;&#10;&#9;@ThriftField&#10;&#9;public void setBizCode(TBizCodeInfo bizCode) {&#10;&#9;&#9;this.bizCode = bizCode;&#10;&#9;}&#10;&#10;&#9;@ThriftField(2)&#10;&#9;public $SonClass$ getConfig() {&#10;&#9;&#9;return config;&#10;&#9;}&#10;&#10;&#9;@ThriftField&#10;&#9;public void setConfig($SonClass$ config) {&#10;&#9;&#9;this.config = config;&#10;&#9;}&#10;&#10;&#9;@Override&#10;&#9;public String toString() {&#10;&#9;&#9;return &quot;$className${&quot; +&#10;&#9;&#9;&#9;&#9;&quot;bizCode=&quot; + bizCode +&#10;&#9;&#9;&#9;&#9;&quot;, config=&quot; + config +&#10;&#9;&#9;&#9;&#9;'}';&#10;&#9;}&#10;}" description="TBMS开关--外层返回的Response" toReformat="false" toShortenFQNames="true">
    <variable name="time" expression="date(&quot;Y-MM-d&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="SonClass" expression="regularExpression(className(), &quot;Response&quot;, &quot;&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tbmsSwitch2" value="import com.facebook.swift.codec.ThriftField;&#10;import com.facebook.swift.codec.ThriftStruct;&#10;import com.meituan.train.tbms.model.TBizCodeInfo;&#10;import com.meituan.servicecatalog.api.annotations.FieldDoc;&#10;&#10;/**&#10; * @author yangzhe&#10; * @date $time$&#10; */&#10;@ThriftStruct&#10;public class $className$ {&#10;&#10;&#9;@FieldDoc(description = &quot;开关打开&quot;)&#10;&#9;private boolean open;&#10;&#10;&#10;&#9;@ThriftField(1)&#10;&#9;public boolean isOpen() {&#10;&#9;&#9;return open;&#10;&#9;}&#10;&#10;&#9;@ThriftField&#10;&#9;public void setOpen(boolean open) {&#10;&#9;&#9;this.open = open;&#10;&#9;}&#10;&#10;&#9;@Override&#10;&#9;public String toString() {&#10;&#9;&#9;return &quot;$className${&quot; +&#10;&#9;&#9;&#9;&#9;&quot;open=&quot; + open +&#10;&#9;&#9;&#9;&#9;'}';&#10;&#9;}&#10;}" description="TBMS开关--Response里面的data结构体" toReformat="false" toShortenFQNames="true">
    <variable name="time" expression="date(&quot;Y-MM-d&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="lion" value="import com.meituan.train.braveheart.model.AbTestConfigWithRange;&#10;import lombok.Data;&#10;import com.meituan.servicecatalog.api.annotations.FieldDoc;&#10;&#10;@Data&#10;public class $className$ {&#10;&#10;    @FieldDoc(description = &quot;灰度信息&quot;)&#10;    private AbTestConfigWithRange abTestConfigWithRange;&#10;&#10;    public static final $className$ DEFAULT;&#10;&#10;    static {&#10;        DEFAULT = new $className$();&#10;        AbTestConfigWithRange abTestConfigWithRange = new AbTestConfigWithRange();&#10;        abTestConfigWithRange.setOpen(false);&#10;        DEFAULT.setAbTestConfigWithRange(abTestConfigWithRange);&#10;    }&#10;}" description="生成一个Lion-Config" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>