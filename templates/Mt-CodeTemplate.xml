<templateSet group="Mt-CodeTemplate">
  <template name="deleg" value="// todo 1 判空逻辑改一下&#10;if (java.util.Objects.isNull(thriftRequest)) {&#10;    return new $methodReturnType$();&#10;}&#10;String thriftMethod = &quot;$className$.$methodName$&quot;;&#10;&#10;// todo 2 打点的工程赋一下值&#10;CatMetricEnum catMetricEnum;&#10;&#10;try {&#10;    // todo 3 调用实际的函数，这里写的时候要注意上面传的参数跟下面的完全一致，要么就是自己抄出来生成赋值&#10;    $methodReturnType$ thriftResponse = trainTripService.queryTrainTripWithoutLeftTicketNum($ARGUMENTS$);&#10;    if (java.util.Objects.isNull(thriftResponse)) {&#10;        CatReportUtil.monitorThriftServiceNull(catMetricEnum, thriftMethod);&#10;        logger.error(&quot;AgentBaseDataDelegateService {} return null, $PLACE_HOLDERS$&quot;, thriftMethod, $ARGUMENTS$);&#10;        return new $methodReturnType$();&#10;    }&#10;    if (0 != thriftResponse.getCode() || Objects.isNull(thriftResponse.getData())) {&#10;        logger.error(&quot;$className$.$METHOD_NAME$ return error, errorCode: {}, errorMsg: {}, req $PLACE_HOLDERS$&quot;, &#10;                thriftResponse.getCode(), thriftResponse.getMsg(), $ARGUMENTS$);&#10;        CatReportUtil.monitorThriftServiceFail(catMetricEnum, thriftMethod, thriftResponse.getCode() + &quot;:&quot; + thriftResponse.getMsg());&#10;        return new $methodReturnType$();&#10;    }&#10;&#10;    CatReportUtil.monitorMetricSuccess(catMetricEnum, thriftMethod);&#10;    logger.info(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$, response:{}&quot;, $ARGUMENTS$, thriftResponse);&#10;    return thriftResponse;&#10;} catch (org.apache.thrift.TException e) {&#10;    CatReportUtil.monitorThriftServiceTException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ TException, req: {}&quot;, $ARGUMENTS$, e);&#10;} catch (Exception e) {&#10;    CatReportUtil.monitorThriftServiceException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ system error, req: {}&quot;, $ARGUMENTS$, e);&#10;}&#10;return new $methodReturnType$();" description="调用服务的delegate服务" toReformat="false" toShortenFQNames="true">
    <variable name="methodReturnType" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="thrift" value="        $methodReturnType$ thriftResponse = new $methodReturnType$();&#10;        try {&#10;&#10;            String thriftMethod = &quot;$methodName$&quot;;&#10;&#10;            // todo 2 打点的工程赋一下值&#10;            CatMetricEnum catMetricEnum;&#10;            grabWelfareChannelService.$METHOD_NAME$(request.getQOrderId(), ActivityGrabOrderStatusEnum.SUCCESS.getCode());&#10;            &#10;            response.setCode(Integer.valueOf(ErrorCodeEnum.SUCCESS.getCode()));&#10;            response.setMessage(ErrorCodeEnum.SUCCESS.getMessage());&#10;            CatReportUtil.concat(report,$methodName$)(catMetricEnum, &quot;$methodName$&quot;, &quot;success&quot;);&#10;            logger.info(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$, response:{}&quot;, $ARGUMENTS$, thriftResponse);&#10;        } catch (AppException e) {&#10;            logger.error(&quot;$className$.$METHOD_NAME$ appException, errorCode: {}, errorMsg: {}, $PLACE_HOLDERS$&quot;,               thriftResponse.getCode(), thriftResponse.getMsg(), $ARGUMENTS$);&#10;            CatReportUtil.concat(report,$methodName$)(catMetricEnum, &quot;$methodName$&quot;,e.getErrorMessage());&#10;            response.setCode(Integer.valueOf(e.getErrorCode()));&#10;            response.setMessage(e.getMessage());&#10;            &#10;        } catch (Exception e) {&#10;            logger.error(&quot;$className$.$METHOD_NAME$ system error, $PLACE_HOLDERS$&quot;, $ARGUMENTS$, e);&#10;            CatReportUtil.monitorThriftServiceException(catMetricEnum, &quot;$methodName$&quot;, &quot;fail&quot;);&#10;            &#10;            response.setCode(Integer.valueOf(ErrorCodeEnum.FAIL.getCode()));&#10;            response.setMessage(ErrorCodeEnum.FAIL.getMessage());&#10;        }&#10;        return response;" description="提供服务的thrift方法" toReformat="false" toShortenFQNames="true">
    <variable name="methodReturnType" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="enumGene" value="    //    SELECT_SEAT_NOW(1, &quot;已选择坐席&quot;),&#10;    ;&#10; &#10;    private Integer code;&#10;    private String message;&#10;&#10;    private static final java.util.Map&lt;Integer, $className$&gt; CODE_MAP;&#10;&#10;    static {&#10;        CODE_MAP = com.google.common.collect.Maps.newHashMap();&#10;        for ($className$ item : $className$.values()) {&#10;            CODE_MAP.put(item.getCode(), item);&#10;        }&#10;    }&#10;&#10;    $className$(Integer code, String message) {&#10;        this.code = code;&#10;        this.message = message;&#10;    }&#10;&#10;    public String getmessage() {&#10;        return message;&#10;    }&#10;&#10;    public Integer getCode() {&#10;        return code;&#10;    }&#10;&#10;    public static final $className$ codeOf(Integer code) {&#10;        if (code == null) {&#10;            return null;&#10;        }&#10;        return CODE_MAP.get(code);&#10;    }" description="enum生成" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>