<templateSet group="Mt-Thrift">
  <template name="deleg" value="if (java.util.Objects.isNull(thriftRequest)) {&#10;    return new $methodReturnType$();&#10;}&#10;String thriftMethod = &quot;$methodName$&quot;;&#10;CatMetricEnum catMetricEnum;&#10;&#10;&#10;try {&#10;    $methodReturnType$ thriftResponse = trainTripService.queryTrainTripWithoutLeftTicketNum(thriftRequest);&#10;    if (java.util.Objects.isNull(thriftResponse)) {&#10;        CatReportUtil.monitorThriftServiceNull(catMetricEnum, thriftMethod);&#10;        logger.error(&quot;AgentBaseDataDelegateService {} return null, req: {}&quot;, thriftMethod, thriftRequest);&#10;        // todo 这个返回参可能要改&#10;        return new $methodReturnType$();&#10;    }&#10;    if (0 != thriftResponse.getCode()) {&#10;        logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ return error, errorCode: {}, errorMsg: {}, req: {}&quot;, thriftResponse.getCode(), thriftResponse.getMsg(), $ARGUMENTS$);&#10;        CatReportUtil.monitorThriftServiceFail(catMetricEnum, thriftMethod, thriftResponse.getCode() + &quot;:&quot; + thriftResponse.getMsg());&#10;        // todo 这个返回参可能要改&#10;        return new $methodReturnType$();&#10;    }&#10;&#10;    CatReportUtil.monitorMetricSuccess(catMetricEnum, thriftMethod);&#10;    logger.info(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$&quot;, $ARGUMENTS$);&#10;    return thriftResponse;&#10;} catch (org.apache.thrift.TException e) {&#10;    CatReportUtil.monitorThriftServiceTException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ TException, req: {}&quot;, thriftRequest, e);&#10;} catch (Exception e) {&#10;    CatReportUtil.monitorThriftServiceException(catMetricEnum, thriftMethod);&#10;    logger.error(&quot;$className$.$METHOD_NAME$::$PLACE_HOLDERS$ system error, req: {}&quot;, thriftRequest, e);&#10;}&#10;return new $methodReturnType$();" description="调用服务的delegate服务" toReformat="false" toShortenFQNames="true">
    <variable name="methodReturnType" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>